{"version":3,"sources":["components/Form.js","components/Titles.js","components/Products.js","App.js","components/Product.js","components/Router.js","serviceWorker.js","index.js"],"names":["Form","React","Component","props","react_default","a","createElement","onSubmit","getProduct","style","marginBottom","className","type","name","Products","products","map","product","key","productid","src","image","alt","productname","length","concat","substring","companyname","Link","to","pathname","state","productinfo","imageurl","productcategory","productioncapacity","sparecapacity","avaliablestock","deliverydate","websiteid","API_KEY","App","_callee","e","api_call","data","regenerator_default","wrap","_context","prev","next","preventDefault","target","elements","productName","value","fetch","sent","json","_this","setState","console","log","stop","componentDidMount","localStorage","getItem","JSON","parse","componentDidUpdate","stringify","setItem","components_Form","this","components_Products","Product","componentWillMount","location","href","Router","BrowserRouter","Switch","Route","path","component","exact","Boolean","window","hostname","match","ReactDOM","render","components_Router","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.22343673.chunk.js","sourcesContent":["import React from 'react';\r\n\r\n const Form = props => (\r\n  \r\n      <div>\r\n        <form onSubmit={props.getProduct} style={{marginBottom:\"2rem\"}}>\r\n            <input className=\"form__input\" type=\"text\" name=\"productName\" />\r\n           <button className=\"form__button\">Search</button>\r\n        </form>\r\n      </div>\r\n    );\r\n \r\nexport default Form;\r\n","import React, { Component } from 'react';\r\n\r\n\r\nclass Titles extends React.Component{\r\n    render() {\r\n        return(\r\n          <h1>title component</h1>\r\n        );\r\n    }\r\n};\r\nexport default Titles;","import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\n\r\n\r\nconst Products = props => (\r\n    <div className=\"container\">\r\n        <div className=\"row\">\r\n        {props.products.map((product) =>{\r\n             return(\r\n                <div className=\"col-md-4\" key={product.productid}>\r\n                <div className=\"product__box\">\r\n                <img className=\"product__box img\" src={product.image} alt={product.productname} />\r\n                <div className=\"product__text\">\r\n\r\n                    <h5 className=\"product__title\">\r\n                    {product.productname.length < 15 ? `${product.productname}` :\r\n                `${product.productname.substring(0,20)}...`}</h5>\r\n                    <p className=\"product__subtitle\">Company:\r\n                    <span className=\".product__subtitle span\"> {product.companyname}</span></p>\r\n                </div>\r\n                <button className=\"product_buttons\">\r\n                <Link to={{\r\n                    pathname :`/product/${product.productid}`,\r\n                    state : {\r\n                             productname : product.productname,\r\n                             productinfo : product.productinfo,\r\n                             imageurl : product.image,\r\n                             productcategory : product.productcategory,\r\n                             productioncapacity : product.productioncapacity,\r\n                             sparecapacity : product.sparecapacity,\r\n                             avaliablestock : product.avaliablestock,\r\n                             deliverydate : product.deliverydate,\r\n                             websiteid : product.websiteid\r\n\r\n\r\n                    }\r\n\r\n            }}>View</Link></button>    \r\n                </div>\r\n\r\n                    \r\n                </div>\r\n            );\r\n\r\n        })\r\n\r\n        }\r\n       \r\n        </div>\r\n    </div>\r\n\r\n);\r\nexport default Products;","import React, { Component } from 'react';\n\nimport './App.css';\nimport Titles from './components/Titles';\nimport Form from './components/Form';\nimport Products from './components/Products';\n\nconst API_KEY=\"51c76f30\";\n\nclass App extends Component {\n  state={\n    products:[]\n  }\n\n  getProduct= async(e) =>  {\n \n    e.preventDefault();\n    const productName= e.target.elements.productName.value; \n    const api_call=await fetch(`https://my.api.mockaroo.com/product-info/.json?key=${API_KEY}`);\n    \n   const data= await api_call.json();\n  this.setState ({\n    products: data\n  });\n  console.log(this.state.products);\n  }\n\n  componentDidMount = () => {\n    const json = localStorage.getItem(\"products\");\n    const products= JSON.parse(json);\n    this.setState({\n      products\n    });\n  }\n\n  componentDidUpdate = ()=> {\n    const products = JSON.stringify(this.state.products);\n    localStorage.setItem(\"products\", products);\n  }\n  render() {\n    return (\n      <div className=\"App\">\n      <header className=\"App-header\">\n      <h1 className=\"App-title\">Product search</h1>\n      </header>\n     \n       \n       <Form getProduct= {this.getProduct} />\n       <Products  products={this.state.products} /> \n    \n     </div> \n    );   \n  }\n}\n\nexport default App;\n","import React, { Component } from 'react';\r\nimport {Link} from \"react-router-dom\";\r\n\r\nconst API_KEY=\"51c76f30\";\r\n\r\nexport default class Product extends Component {\r\n    state= {\r\n       \r\n        productname: \"\",\r\n        imageurl: \"\",\r\n        productinfo:\"\",\r\n        productcategory: \"\",\r\n        productioncapacity:\"\",\r\n        sparecapacity: \"\",\r\n        avaliablestock : \"\",\r\n        deliverydate: \"\",\r\n        websiteid:\"\",\r\n\r\n    }\r\n    componentWillMount = async() => {\r\n       const products = this.props.location.state\r\n        const title= this.props.location.state.companyname;\r\n        const title2= this.props.location.state.productname;\r\n        \r\n       this.setState({\r\n        \r\n        productname: products.productname,\r\n        imageurl:products.imageurl,\r\n        productinfo:products.productinfo,\r\n        productcategory: products.productcategory,\r\n        productioncapacity:products.productioncapacity,\r\n        sparecapacity: products.sparecapacity,\r\n        avaliablestock : products.avaliablestock,\r\n        deliverydate: products.deliverydate,\r\n        websiteid:products.websiteid\r\n       });\r\n      console.log(this.state);\r\n      \r\n    }\r\n    \r\n  render() {\r\n      console.log(this.props);\r\n    return (\r\n      <div className=\"container\">\r\n        {\r\n            this.state !== 0 &&\r\n            <div className=\"active-product\">\r\n            <img className=\"active-product__img\" src={this.state.imageurl} alt= {this.state.productname} >\r\n            </img>\r\n            <h3 className=\"active-product__title\">{this.state.productname}</h3>\r\n            <h4 className=\"active-product__publisher\">\r\n            Info : <span>{this.state.productinfo}</span></h4>\r\n            <h5 className=\"active-product__website\"> Category: <span>{this.state.productcategory}</span></h5>\r\n             <h5 className=\"active-product__website\">Capacity: <span>{this.state.productioncapacity}</span></h5>\r\n            <h5 className=\"active-product__website\">Spare: <span>{this.state.sparecapacity}</span></h5> \r\n            <h5 className=\"active-product__website\">Stock: <span>{this.state.avaliablestock}</span></h5>\r\n            <h5 className=\"active-product__website\">Delivery date: <span>{this.state.deliverydate}</span></h5>\r\n            <p className=\"active-product__website\">Website :\r\n            <span>\r\n                <a href={this.state.websiteid}>{this.state.websiteid.length < 35 ? `${this.state.websiteid}` :\r\n                `${this.state.websiteid.substring(0,30)}...`}</a>\r\n            </span> \r\n            </p>\r\n            <button className=\"active-product__button\">\r\n           <Link to=\"/\">Home</Link>\r\n            </button>\r\n          \r\n        </div>\r\n       \r\n        }\r\n\r\n\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","import React from 'react';\r\nimport{BrowserRouter, Switch, Route} from \"react-router-dom\";\r\nimport App from \"../App\";\r\nimport Product from \"./Product\";\r\n\r\nconst Router = ()=>(\r\n    <BrowserRouter>\r\n    <Switch>\r\n    <Route path=\"/\" component={App} exact />\r\n    <Route path=\"/product/:id\" component={Product} />\r\n    </Switch>\r\n    \r\n    </BrowserRouter>\r\n\r\n);\r\nexport default Router;\r\n\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\nimport App from './App';\nimport Router from \"./components/Router\";\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<Router/>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}